#include <micro_ros_arduino.h>
#include <rcl/rcl.h>
#include <rclc/rclc.h>
#include <rclc/executor.h>
#include <rcl/error_handling.h>

#include <std_msgs/msg/bool.h>
std_msgs__msg__Bool msg;

rcl_node_t node;
rclc_executor_t executor;
rclc_support_t support;
rcl_allocator_t allocator;

rcl_publisher_t publisher;
rcl_subscription_t subscriber;

#define LED_PIN 15

void subscription_callback(const void* msgin) {
  const std_msgs__msg__Bool * msg_toto = (const std_msgs__msg__Bool *)msgin;
  if (msg_toto->data) {
    digitalWrite(LED_PIN, HIGH);
  } else {
    digitalWrite(LED_PIN, LOW);
  }
  // Publish the LED state
  msg.data = msg_toto->data;
  rcl_publish(&publisher, &msg, NULL); //มันส่งมาแล้วนี่หว่า
}

void setup() {
  pinMode(LED_PIN, OUTPUT);

  // Set up Micro-ROS
  set_microros_transports();
  delay(2000);
  rcl_allocator_t allocator = rcl_get_default_allocator();
  // Create init_options
  rclc_support_init(&support, 0, NULL, &allocator);
  // Create node
  rclc_node_init_default(&node, "toto_led", "", &support);

  // Create publisher
  rclc_publisher_init_default(
    &publisher,
    &node,
    ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, Bool),
    "led_state");

  // Create subscriber
  rcl_ret_t rc =  rclc_subscription_init_default(
    &subscriber,
    &node,
    ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, Bool),
    "led_command");

  // Create executor
  rclc_executor_init(&executor, &support.context, 2, &allocator);
  rc = rclc_executor_add_subscription(&executor, &subscriber, &msg, &subscription_callback, ON_NEW_DATA);
}

void loop() {
  rclc_executor_spin_some(&executor, RCL_MS_TO_NS(100));
}

//ros2 run micro_ros_agent micro_ros_agent serial --dev /dev/ttyUSB0
//colcon build --symlink-install
//ros2 topic list
//ros2 topic echo /led_state
//ros2 topic pub --once /led_command std_msgs/Bool "data: true"
//ros2 topic pub --once /led_command std_msgs/Bool "data: false"
//ros2 run button_tester led_control_gui
